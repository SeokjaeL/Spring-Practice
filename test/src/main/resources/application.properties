# 애플리케이션 이름 설정
spring.application.name=test
# 서버 포트 설정
server.port=8012

# Thymeleaf 설정
# Thymeleaf 템플릿 파일의 기본 경로를 'classpath:/templates/'로 설정합니다.
spring.thymeleaf.prefix=classpath:/templates/
# Thymeleaf 템플릿 파일의 접미사를 '.html'로 설정합니다.
spring.thymeleaf.suffix=.html

#mysql연결설정
# MySQL 데이터베이스에 연결할 JDBC URL을 설정합니다. 'localhost'의 'testdb' 데이터베이스를 사용하며, SSL을 사용하지 않습니다.
# SSL(Secure Sockets Layer)은 네트워크 상에서 데이터를 안전하게 전송하기 위한 암호화 프로토콜입니다. 이를 통해 데이터가 전송되는 동안 도청이나 변조를 방지할 수 있습니다.
spring.datasource.url=jdbc:mysql://localhost:3306/testdb?useSSL=false
spring.datasource.username=tester
spring.datasource.password=1234
# MySQL JDBC 드라이버 클래스를 설정합니다.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA 설정
# JPA가 실행하는 SQL 쿼리를 콘솔에 출력하도록 설정합니다.
spring.jpa.show-sql=true
# 애플리케이션 시작 시 데이터베이스 스키마를 자동으로 업데이트합니다. 'create', 'create-drop', 'validate', 'none' 등 다른 옵션도 사용할 수 있습니다.
spring.jpa.hibernate.ddl-auto=update
# Hibernate에 MySQL Dialect를 사용하도록 설정합니다. 이는 데이터베이스에 맞는 SQL을 생성하는 데 필요합니다.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect


# 로깅 설정
# Hibernate가 실행하는 SQL 쿼리를 디버그 레벨로 로깅합니다.
logging.level.org.hibernate.SQL=DEBUG
# Hibernate가 사용되는 SQL 타입 정보를 추적 레벨로 로깅합니다.
logging.level.org.hibernate.type=TRACE
